{"version":3,"sources":["App.module.css","redux/actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filter","connect","state","contacts","items","dispatch","onSubmit","actions","useState","setName","setNumber","handleInputChange","e","currentTarget","value","findSameName","find","contact","toLowerCase","formReset","className","s","form","preventDefault","alert","label","htmlFor","type","placeholder","onChange","button","getVisiblesContacts","allContacts","normalizeFilter","includes","onDeleteContact","map","onClick","App","container","itemsReducer","createReducer","filterReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.80ecffa0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3b2eG\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('phonebook/add', ({ name, number }) => ({\n  payload: { id: uuidv4(), name, number },\n}));\n\nconst deleteContact = createAction('phonebook/delete');\n\nconst filter = createAction('phonebook/filter');\n\nexport default { addContact, deleteContact, filter };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name || !number) {\n      return alert(`Some field is empty.`);\n    }\n    const sameName = findSameName(name);\n    if (sameName) {\n      formReset();\n      return alert(`${name} is already in contacts.`);\n    }\n    onSubmit({ name, number });\n    formReset();\n  };\n  const findSameName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name..\"\n          value={name}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <label className={s.label} htmlFor=\"\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number..\"\n          value={number}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => {\n    return dispatch(actions.addContact(name, number));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport PropTypes from 'prop-types';\nimport './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"...\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.filter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport PropTypes from 'prop-types';\nimport './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            onDeleteContact(id);\n          }}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisiblesContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisiblesContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport s from './App.module.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst initialData = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\n// const initialState = {\n//   contacts: {\n//     items: initialData,\n//     filter: '',\n//   },\n// };\n\nconst itemsReducer = createReducer(initialData, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\n// const store = configureStore({\n//   reducer: {\n//     contacts: contactsReducer,\n//   },\n// });\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<p>Loading...</p>} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Q4D3\",\"label\":\"ContactForm_label__2SUF2\",\"button\":\"ContactForm_button__1AruZ\"};"],"sourceRoot":""}