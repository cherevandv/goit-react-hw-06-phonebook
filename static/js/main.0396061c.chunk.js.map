{"version":3,"sources":["App.module.css","redux/actions-types.js","redux/actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","name","number","type","actionTypes","payload","id","uuidv4","value","connect","state","contacts","items","dispatch","onSubmit","actions","useState","setName","setNumber","handleInputChange","e","currentTarget","findSameName","find","contact","toLowerCase","formReset","className","s","form","preventDefault","alert","label","htmlFor","placeholder","onChange","button","filter","getVisiblesContacts","allContacts","normalizeFilter","includes","onDeleteContact","map","onClick","App","container","initialData","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0396061c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3b2eG\"};","const ADD = 'phonebook/add';\r\n\r\nconst DELETE = 'phonebook/delete';\r\n\r\nconst FILTER = 'phonebook/filter';\r\n\r\nexport default { ADD, DELETE, FILTER };\r\n","import actionTypes from './actions-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = ({ name, number }) => ({\r\n  type: actionTypes.ADD,\r\n  payload: { id: uuidv4(), name, number },\r\n});\r\n\r\nconst deleteContact = id => ({\r\n  type: actionTypes.DELETE,\r\n  payload: id,\r\n});\r\n\r\nconst filter = value => ({ type: actionTypes.FILTER, payload: value });\r\n\r\nexport default { addContact, deleteContact, filter };\r\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name || !number) {\n      return alert(`Some field is empty.`);\n    }\n    const sameName = findSameName(name);\n    if (sameName) {\n      formReset();\n      return alert(`${name} is already in contacts.`);\n    }\n    onSubmit({ name, number });\n    formReset();\n  };\n  const findSameName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name..\"\n          value={name}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <label className={s.label} htmlFor=\"\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number..\"\n          value={number}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => {\n    return dispatch(actions.addContact(name, number));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport PropTypes from 'prop-types';\nimport './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"...\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.filter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport PropTypes from 'prop-types';\nimport './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            onDeleteContact(id);\n          }}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisiblesContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisiblesContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\r\nimport s from './App.module.css';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={s.container}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport actionTypes from './actions-types';\r\n\r\nconst initialData = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: initialData,\r\n//     filter: '',\r\n//   },\r\n// };\r\n\r\nconst itemsReducer = (state = initialData, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD:\r\n      return [...state, payload];\r\n\r\n    case actionTypes.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterReducer = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Q4D3\",\"label\":\"ContactForm_label__2SUF2\",\"button\":\"ContactForm_button__1AruZ\"};"],"sourceRoot":""}