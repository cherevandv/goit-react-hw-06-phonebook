{"version":3,"sources":["App.module.css","redux/actions.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filter","getItems","state","contacts","items","getFilter","getVisiblesContacts","createSelector","allContacts","normalizeFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","contactsBook","useSelector","dispatch","useDispatch","handleInputChange","e","currentTarget","value","findSameName","find","formReset","className","s","form","onSubmit","preventDefault","alert","actions","label","htmlFor","type","placeholder","onChange","button","Filter","ContactList","map","onClick","App","container","itemsReducer","createReducer","filterReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ba8f638e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3b2eG\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('phonebook/add', ({ name, number }) => ({\n  payload: { id: uuidv4(), name, number },\n}));\n\nconst deleteContact = createAction('phonebook/delete');\n\nconst filter = createAction('phonebook/filter');\n\nexport default { addContact, deleteContact, filter };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisiblesContacts = createSelector(\n  [getItems, getFilter],\n  (allContacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n    return allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getItems } from '../../redux/selectors';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactsBook = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name || !number) {\n      return alert(`Some field is empty.`);\n    }\n    const sameName = findSameName(name);\n    if (sameName) {\n      formReset();\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(actions.addContact({ name, number }));\n    // onSubmit({ name, number });\n    formReset();\n  };\n  const findSameName = name => {\n    return contactsBook.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name..\"\n          value={name}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <label className={s.label} htmlFor=\"\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number..\"\n          value={number}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.items,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onSubmit: (name, number) => {\n//     return dispatch(actions.addContact(name, number));\n//   },\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\nimport './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"...\"\n        value={value}\n        onChange={e => dispatch(actions.filter(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n}\n\n// Filter.propTypes = {\n//   value: PropTypes.string,\n//   onChange: PropTypes.func,\n// };\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter,\n// });\n// const mapDispatchToProps = dispatch => ({\n//   onChange: e => dispatch(actions.filter(e.currentTarget.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getVisiblesContacts } from '../../redux/selectors';\nimport './ContactList.module.css';\n\nexport default function ContactList() {\n  const contactsBook = useSelector(getVisiblesContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {contactsBook.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(actions.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.array.isRequired,\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n\n// const getVisiblesContacts = (allContacts, filter) => {\n//   const normalizeFilter = filter.toLowerCase();\n//   return allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizeFilter),\n//   );\n// };\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getVisiblesContacts(items, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: id => dispatch(actions.deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport s from './App.module.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst initialData = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst itemsReducer = createReducer(initialData, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\n// const store = configureStore({\n//   reducer: {\n//     contacts: contactsReducer,\n//   },\n// });\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<p>Loading...</p>} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Q4D3\",\"label\":\"ContactForm_label__2SUF2\",\"button\":\"ContactForm_button__1AruZ\"};"],"sourceRoot":""}